name: "Terraform"

on:
  push:
    branches: ["master"]
  pull_request:

permissions:
  contents: read

jobs:
  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    environment: stage
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: server/requirements.txt

      - name: Install server libraries
        run: pip install -r server/requirements.txt

      - name: Run server unit tests
        run: pytest server/tests/unit

  deploy_foundation:
    name: "Deploy foundation"
    needs: [unit_tests]
    runs-on: ubuntu-latest
    environment: stage
    defaults:
      run:
        shell: bash
        working-directory: terraform/environments/stage/foundation
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-2"

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialise terraform state
        run: terraform init

      - name: Apply terraform state
        run: terraform apply -auto-approve

  deploy_infrastructure:
    name: "Deploy infrastructure"
    needs: [deploy_foundation]
    runs-on: ubuntu-latest
    environment: stage
    defaults:
      run:
        shell: bash
        working-directory: terraform/environments/stage/infrastructure
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-2"

      - name: Setup AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialise terraform state
        run: terraform init

      - name: Apply terraform state
        run: terraform apply -auto-approve

  build_website:
    name: "Build website"
    needs: [deploy_infrastructure]
    runs-on: ubuntu-latest
    environment: stage
    defaults:
      run:
        shell: bash
        working-directory: terraform/environments/stage/website_build
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-2"

      - name: Setup NodeJS
        uses: actions/setup-node@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install NodeJS libraries
        working-directory: client
        run: npm install

      - name: Initialise terraform state
        run: terraform init

      - name: Apply terraform state
        run: terraform apply -auto-approve

      - name: Initialise terraform state (deploy)
        working-directory: terraform/environments/stage/website_deploy
        run: terraform init

      - name: Apply terraform state (deploy)
        working-directory: terraform/environments/stage/website_deploy
        run: terraform apply -auto-approve

  #   deploy_website:
  #     name: "Deploy website"
  #     needs: [build_website]
  #     runs-on: ubuntu-latest
  #     environment: stage
  #     defaults:
  #       run:
  #         shell: bash
  #         working-directory: terraform/environments/stage/website_deploy
  #     steps:
  #       - name: Checkout branch
  #         uses: actions/checkout@v4

  #       - name: Setup AWS credentials
  #         uses: aws-actions/configure-aws-credentials@v4
  #         with:
  #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #           aws-region: "ap-southeast-2"
  #       - name: Setup terraform
  #         uses: hashicorp/setup-terraform@v2

  #       - name: Initialise terraform state
  #         run: terraform init

  #       - name: Apply terraform state
  #         run: terraform apply -auto-approve

  api_tests:
    name: "API Tests"
    needs: [deploy_infrastructure]
    runs-on: ubuntu-latest
    environment: stage
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-2"

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: server/requirements.txt

      - name: Install server libraries
        run: pip install -r server/requirements.txt

      - name: Run server api tests
        run: pytest server/tests/api
